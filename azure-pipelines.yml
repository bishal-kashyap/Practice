trigger:
- main

stages:
- stage: Build
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: npm install
      displayName: 'Install Node.js dependencies'
      
    - script: npm run build
      displayName: 'Build application'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/app.zip
      artifact: drop
      displayName: 'Publish artifact'

- stage: Test
  jobs:
  - job: TestJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: drop
      displayName: 'Download artifact'
      
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '$(Pipeline.Workspace)/drop/app.zip'
        destinationFolder: '$(Pipeline.Workspace)/app'
      
    - script: npm install --prefix $(Pipeline.Workspace)/app
      displayName: 'Install Node.js dependencies'
      
    - script: npm test --prefix $(Pipeline.Workspace)/app
      displayName: 'Run tests'

- stage: Deploy
  jobs:
  - job: DeployJob
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: drop
      displayName: 'Download artifact'
      
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '$(Pipeline.Workspace)/drop/app.zip'
        destinationFolder: '$(Pipeline.Workspace)/app'
      
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'AzureServiceConnection'  # Replace with your connection name
        appType: 'webAppLinux'
        WebAppName: 'your-web-app-name'
        packageForLinux: '$(Pipeline.Workspace)/app'
        RuntimeStack: 'NODE|12-lts'
